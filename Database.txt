//Create AccountRequest table with contstraint

CREATE TABLE ACCOUNTREQUEST (
REQUESTID NUMBER(10),
BRANCH VARCHAR2(15) NOT NULL,
ACCOUNT_TYPE VARCHAR2(15) NOT NULL,
TITLE VARCHAR2(4) NOT NULL,
FIRSTNAME VARCHAR2(15) NOT NULL,
LASTNAME VARCHAR2(15) NOT NULL,
DOB DATE NOT NULL,
WORKPHONE NUMBER(10) ,
HOMEPHONE NUMBER(10) NOT NULL,
ADDRESS VARCHAR2(30) NOT NULL,
STATE VARCHAR2(15) NOT NULL,
ZIP NUMBER(10) NOT NULL,
EMAIL VARCHAR2(30),
STATUS VARCHAR2(10) NOT NULL,
CONSTRAINT PK_REQUESTID PRIMARY KEY(REQUESTID));

//Create TransactionInfo table with constraint

CREATE TABLE TRANSACTIONINFO (
TRANSACTIONID NUMBER(10),
TRANSACTIONDATE DATE,
ACCOUNTNO NUMBER(6),
AMOUNT NUMBER(8) NOT NULL,
CHEQUENO NUMBER(10) NOT NULL,
TRANSACTION_TYPE VARCHAR2(2) NOT NULL,
CONSTRAINT FK_ACCOUNTNO FOREIGN KEY(ACCOUNTNO)
REFERENCES REGISTEREDINFO(ACCOUNT_NUMBER),
CONSTRAINT PK_TRANSACTIONID PRIMARY KEY(TRANSACTIONID));

//Create RegisteredInfo table with constraint 

CREATE TABLE REGISTEREDINFO (
REQUESTID NUMBER(10),
ACCOUNT_NUMBER NUMBER(6),
BRANCH VARCHAR2(15) NOT NULL,
ACCOUNT_TYPE VARCHAR2(15) NOT NULL,
TITLE VARCHAR2(4) NOT NULL,
FIRSTNAME VARCHAR2(15) NOT NULL,
LASTNAME VARCHAR2(15) NOT NULL,
DOB DATE, 
WORKPHONE NUMBER(10),
HOMEPHONE NUMBER(10) NOT NULL,
ADDRESS VARCHAR2(30) NOT NULL,
STATE VARCHAR2(15) NOT NULL,
ZIP NUMBER(10) NOT NULL,
EMAIL VARCHAR2(30),
ONLINE_REGISTRATION VARCHAR2(1) NOT NULL,
PASSWORD VARCHAR2(10),
CONSTRAINT FK_REQUESTID FOREIGN KEY(REQUESTID) 
REFERENCES ACCOUNTREQUEST(REQUESTID),
CONSTRAINT PK_ACCOUNTNO PRIMARY KEY(ACCOUNT_NUMBER));

//Create sequence for requestID
CREATE SEQUENCE REQUESTID_SEQUENCE
START WITH 1000
INCREMENT BY 10
MINVALUE 1000
NOCYCLE;

//trigger for requestid
DECLARE
	auto_id NUMBER;
BEGIN
	SELECT REQUESTID_SEQUENCE.nextval INTO auto_id FROM dual;
	:accountrequest.requestid:=auto_id;
END;



























